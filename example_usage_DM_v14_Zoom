#%%
%matplotlib qt                      
from libMapping_v12 import mapping  # <--- this is all you need to do diffusion processing
from libMapping_v12 import readFolder,decompose_LRT,go_ir_fit,moco,moco_naive,bmode
import numpy as np
import matplotlib.pyplot as plt
import os
import SimpleITK as sitk # conda pip install SimpleITK-SimpleElastix

import scipy.io as sio
from tqdm.auto import tqdm # progress bar
from imgbasics import imcrop
from skimage.transform import resize as imresize
import warnings #we know deprecation may show bc we are using a stable older ITK version
warnings.filterwarnings("ignore", category=DeprecationWarning)
defaultPath= r'C:\Research\MRI\MP_EPI'
plt.rcParams['savefig.dpi'] = 500
plt.rcParams.update({'axes.titlesize': 'small'})
#%%
plot=True
#%%
CIRC_ID='CIRC_00373'
dicomPath=os.path.join(defaultPath,f'{CIRC_ID}_22737_{CIRC_ID}_22737\MP03_DWI')
ID = os.path.dirname(dicomPath).split('\\')[-1]
MP03 = mapping(data=fr'{dicomPath}_p.mapping')
cropzone=MP03.cropzone
# %%

dicomPath=os.path.join(defaultPath,f'{CIRC_ID}_22737_{CIRC_ID}_22737\MP03_DWI_Z')
dirpath=os.path.dirname(dicomPath)
MP03 = mapping(data=dicomPath,CIRC_ID=CIRC_ID,sortBy='seriesNumber')
#MP03 = mapping(data=fr'{dicomPath}_p.mapping')
# %%
#Motion correction
MP03.cropzone=cropzone
MP03.go_crop()
MP03.go_resize(scale=2)
#MP03.go_moco()
MP03.imshow_corrected(ID=f'{MP03.ID}_raw',plot=plot)
bmode_path=os.path.join(dirpath,f'{MP03.ID}_b_mode_raw')
bmode(MP03._data,dir=bmode_path)
#%%
dicomPath=os.path.join(defaultPath,f'{CIRC_ID}_22737_{CIRC_ID}_22737\MP02_T2_Z')
MP02 = mapping(data=dicomPath,CIRC_ID=CIRC_ID)
MP02.cropzone=cropzone
# %%
MP02.go_crop()
MP02.go_resize(scale=2)
#MP02.go_moco()
MP02.imshow_corrected(ID=f'{MP02.ID}_raw',plot=plot)
bmode_path=os.path.join(dirpath,f'{MP02.ID}_b_mode_raw')
bmode(MP02._data,dir=bmode_path)
#%%
#ReadMP01
dicomPath=os.path.join(defaultPath,f'{CIRC_ID}_22737_{CIRC_ID}_22737\MP01_T1')
MP01 = mapping(data=fr'{dicomPath}_p.mapping')
# %%
from imgbasics import imcrop
from skimage.transform import resize as imresize
shape=np.shape(MP02._data)
data_8000_cor=np.zeros((shape[:3]),dtype=np.float64)
data_8000_cor=np.squeeze(MP01._data[...,0])

data_8000_tmp=np.copy(np.squeeze(data_8000_cor)[:,:,:,np.newaxis])
# %%
print('Conducting Moco in MP02')

MP02_temp_Ind0=np.concatenate((data_8000_tmp,MP02._data),axis=-1)
MP02_temp_list=MP02.valueList.copy()
MP02_temp_list.insert(0,'T1')
data_return02_lrt=moco(MP02_temp_Ind0,MP02,MP02_temp_list)
bmode_path=os.path.join(dirpath,f'{MP02.ID}_b_mode_lrt')
bmode(data_return02_lrt,dir=bmode_path)
#%%
##Use the naive for registeration
data_return02_naive=moco_naive(MP02_temp_Ind0,MP02,MP02_temp_list)
bmode_path=os.path.join(dirpath,f'{MP02.ID}_b_mode_naive')
bmode(data_return02_naive,dir=bmode_path)

#%%
MP02._save_nib(data=data_return02_naive[:,:,:,1::])
print(MP02.valueList)
#%%


#MP03-MP01
print('Conducting Moco in MP03')
MP03_temp_Ind0=np.concatenate((data_8000_tmp,MP03._data),axis=-1)

MP03_temp_list=MP03.valueList.copy()
MP03_temp_list.insert(0,'T1')
data_return03_lrt=moco(MP03_temp_Ind0,MP03,MP03_temp_list)
bmode_path=os.path.join(dirpath,f'{MP03.ID}_b_mode_lrt')
bmode(data_return03_lrt,dir=bmode_path)

#%%
##Use the naive for registeration
data_return03_naive=moco_naive(MP03_temp_Ind0,MP03,MP03_temp_list)
bmode_path=os.path.join(dirpath,f'{MP03.ID}_b_mode_naive')
bmode(data_return03_naive,dir=bmode_path)

#%%
MP02._data=data_return02_naive[:,:,:,1::]
MP03._data=data_return03_lrt[:,:,:,1::]

#%%
#Get the Maps
ADC=MP03.go_cal_ADC()
MP03._map=ADC*1000
MP03.imshow_map()
 
# %%
path=os.path.dirname(dicomPath)
newshape = (np.shape(MP02._data)[0], np.shape(MP02._data)[1], data_8000_tmp.shape[2], data_8000_tmp.shape[3])
map_data=np.zeros(newshape)
map_data=sio.loadmat(os.path.join(path,'MP02_T2_Z.mat'))
map_data=map_data['T2']
plt.figure()
MP02._map= map_data
MP02.imshow_map()


# %%
#Update_Map

MP03._update_mask(MP01)
MP03.save()
# look at stats
MP03.show_calc_stats_LV()
MP03.imshow_overlay()

MP02._update_mask(MP01)
MP02.save()
# look at stats
MP02.show_calc_stats_LV()
MP02.imshow_overlay()
#%%
MP01.export_stats(filename=r'C:\Research\MRI\MP_EPI\mapping.csv',crange=[0,3000])
MP02.export_stats(filename=r'C:\Research\MRI\MP_EPI\mapping.csv',crange=[0,150])
MP03.export_stats(filename=r'C:\Research\MRI\MP_EPI\mapping.csv',crange=[0,3])

#%%
#Zoom only
dicomPath=os.path.join(defaultPath,f'{CIRC_ID}_22737_{CIRC_ID}_22737\MP02_T2_Z')
MP02 = mapping(data=dicomPath,CIRC_ID=CIRC_ID,ID='MP02_T2_Z_only')
MP02.cropzone=cropzone
# %%
MP02.go_crop()
MP02.go_resize(scale=2)
MP02.go_moco()

MP02._save_nib()
print(MP02.valueList)

#%%
dicomPath=os.path.join(defaultPath,f'{CIRC_ID}_22737_{CIRC_ID}_22737\MP03_DWI_Z')
dirpath=os.path.dirname(dicomPath)
MP03 = mapping(data=dicomPath,CIRC_ID=CIRC_ID,sortBy='seriesNumber',ID='MP03_DWI_Z_only')
#MP03 = mapping(data=fr'{dicomPath}_p.mapping')
# %%
#Motion correction
MP03.cropzone=cropzone
MP03.go_crop()
MP03.go_resize(scale=2)
MP03.go_moco()

#%%
#Get the Maps
ADC=MP03.go_cal_ADC()
MP03._map=ADC*1000
MP03.imshow_map()

# %%
path=os.path.dirname(dicomPath)
newshape = (np.shape(MP02._data)[0], np.shape(MP02._data)[1], data_8000_tmp.shape[2], data_8000_tmp.shape[3])
map_data=np.zeros(newshape)
map_data=sio.loadmat(os.path.join(path,'MP02_T2_Z_only.mat'))
map_data=map_data['T2']
plt.figure()
MP02._map= map_data
MP02.imshow_map()
#%%
MP03._update_mask(MP01)
MP03.save()
# look at stats
MP03.show_calc_stats_LV()
MP03.imshow_overlay()

MP02._update_mask(MP01)
MP02.save()
# look at stats
MP02.show_calc_stats_LV()
MP02.imshow_overlay()